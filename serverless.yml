service: chapter-aws-mim

useDotenv: true

provider:
  # Provider info
  name: aws
  region: ${env:REGION}
  profile: ${env:PROFILE}
  tags:
    created-at: 2023-03-05
  environment:
    NEW_SERIES_SNS_ARN: "arn:aws:sns:${env:REGION}:${env:ACCOUNT_NUMBER}:NewSeriesNotification-${env:STAGE}"

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - "s3:GetObject"
            - "s3:GetObjectAttributes"
            - "s3:GetObjectAttributes"
            - "s3:DeleteObject"
            - "s3:PutObject"
          Resource: "*"
        - Effect: Allow
          Action:
            - "sns:Publish"
            - "sns:Subscribe"
            - "sns:Unsubscribe"
          Resource: "*"

  # Optional
  memorySize: 128

  # Deploy config
  deploymentPrefix: chapter-aws-mim-deploy
  deploymentBucket:
    blockPublicAccess: true

package:
  exclude:
    - node_modules/**
    - venv/**

resources:
  Resources:
    chapterInfoBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: chapters-info-${env:STAGE}
    newSeriesNotification:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: NewSeriesNotification-${env:STAGE}

functions:
  postSeries:
    name: postSeries-${env:STAGE}
    handler: functions/chaptersService.addNewSeries
    runtime: nodejs16.x
    timeout: 10
    description: A function that injects the new series into the db-like json
    events:
      - httpApi: "POST /series"
    environment:
      STAGE: ${env:STAGE}

  getSeries:
    name: getSeries-${env:STAGE}
    handler: functions/chaptersService.getChaptersInfo
    runtime: nodejs16.x
    timeout: 10
    description: A function that gets the db-like json
    events:
      - httpApi: "GET /series"
    environment:
      STAGE: ${env:STAGE}

  updateSeries:
    name: updateSeries-${env:STAGE}
    handler: functions/chaptersService.updateChapterInfo
    runtime: nodejs16.x
    timeout: 10
    description: A function that updates the a series in the db-like json
    events:
      - httpApi: "PATCH /series"
    environment:
      STAGE: ${env:STAGE}
